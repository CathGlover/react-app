{"ast":null,"code":"var _jsxFileName = \"/Users/cat/Desktop/dictionary-app-react/src/Definitions.js\";\nimport React from \"react\";\nimport Meanings from \"./Meanings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Definitions(response) {\n  console.log(response.definitions.phonetics);\n  if (response.definitions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: response.definitions.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), response.definitions.phonetics.map(function (phonetic, index) {}), response.definitions.meanings.map(function (meaning, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Meanings, {\n            meaning: meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Definitions;\nvar _c;\n$RefreshReg$(_c, \"Definitions\");","map":{"version":3,"names":["React","Meanings","jsxDEV","_jsxDEV","Definitions","response","console","log","definitions","phonetics","children","word","fileName","_jsxFileName","lineNumber","columnNumber","map","phonetic","index","meanings","meaning","_c","$RefreshReg$"],"sources":["/Users/cat/Desktop/dictionary-app-react/src/Definitions.js"],"sourcesContent":["import React from \"react\";\nimport Meanings from \"./Meanings\";\n\nexport default function Definitions(response) {\n  console.log(response.definitions.phonetics);\n  if (response.definitions) {\n    return (\n      <div>\n        <h2>{response.definitions.word}</h2>\n        {response.definitions.phonetics.map(function(phonetic, index){\n          \n        })}\n        {response.definitions.meanings.map(function (meaning, index) {\n          return (\n            <div key={index}>\n              <Meanings meaning={meaning} />\n              <br />\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,WAAWA,CAACC,QAAQ,EAAE;EAC5CC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,WAAW,CAACC,SAAS,CAAC;EAC3C,IAAIJ,QAAQ,CAACG,WAAW,EAAE;IACxB,oBACEL,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAKL,QAAQ,CAACG,WAAW,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACnCV,QAAQ,CAACG,WAAW,CAACC,SAAS,CAACO,GAAG,CAAC,UAASC,QAAQ,EAAEC,KAAK,EAAC,CAE7D,CAAC,CAAC,EACDb,QAAQ,CAACG,WAAW,CAACW,QAAQ,CAACH,GAAG,CAAC,UAAUI,OAAO,EAAEF,KAAK,EAAE;QAC3D,oBACEf,OAAA;UAAAO,QAAA,gBACEP,OAAA,CAACF,QAAQ;YAACmB,OAAO,EAAEA;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9BZ,OAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFEG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;AAACM,EAAA,GAtBuBjB,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}